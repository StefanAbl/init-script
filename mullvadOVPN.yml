---
- hosts: docker1.i.stabl.one
  vars:
    - openvpnConfigDir: "/etc/openvpn/client/"
    # also add the original server from the mullvad zip file
    - vpn_servers:
      - { ip: '217.138.204.66', port: '1195' }
      - { ip: '116.206.230.98', port: '1195' }
      - { ip: '116.206.229.98', port: '1195' }
      - { ip: '116.206.228.242', port: '1195' }
      - { ip: '43.245.162.130', port: '1195' }
      - { ip: '103.77.232.146', port: '1195' }
      - { ip: '116.206.231.58', port: '1195' }
      - { ip: '217.138.204.82', port: '1195' }
      - { ip: '103.77.235.66', port: '1195' }
      - { ip: '43.245.160.162', port: '1195' }
      - { ip: '116.206.228.202', port: '1195' }
      - { ip: '217.138.204.98', port: '1195' }
    - local_interface: "ens18"
    - local_networks: ["10.13.2.0/24", "192.168.2.0/24"]
    - mullvad_files_dir: "./mullvad/"
    - config_file: "{{mullvad_files_dir}}mullvad.conf"
    - service_file: "{{mullvad_files_dir}}openvpn@.service"
    - ks: true #killswitch
    - flush: false

  become: yes
  become_method: sudo
  tasks:
  - name: install epel-release
    dnf:
      name: epel-release
    when: ansible_distribution == "CentOS"
  - name: install openvpn and unzip
    dnf:
      name:
        - openvpn
    when: ansible_distribution == "CentOS"

  - name: install openvpn and iptables-persistent
    apt:
      name:
        - openvpn
        - iptables-persistent
    when: ansible_distribution == "Ubuntu"
  - name: copy fix route script
    copy:
      src:  "{{ mullvad_files_dir }}fix-routes.sh"
      dest: "/etc/openvpn/"

  - name: copy mullvad.cert and mullvad_userpass.txt
    copy:
      src: "{{ item }}"
      dest: "{{ openvpnConfigDir }}"
    with_items:
      - "{{ mullvad_files_dir }}mullvad_ca.crt"
      - "{{ mullvad_files_dir }}mullvad_userpass.txt"
      - "{{ mullvad_files_dir }}update-resolv-conf"

  - name: template mullvad.conf
    template:
      src: "{{ config_file }}"
      dest: "{{ openvpnConfigDir }}mullvad.conf"
  - name: template service file
    template:
      src: "{{ service_file }}"
      dest: /etc/systemd/system/openvpn@.service

  - name: make update-resolv-conf executable
    file:
      path: "{{ openvpnConfigDir }}update-resolv-conf"
      mode: 'og+x'

  - name: reset iptables
    iptables:
        chain: "{{ item }}"
        policy: ACCEPT
    with_items: [ 'INPUT', 'OUTPUT', 'FORWARD']
    when: flush

  - name: flush iptables
    iptables:
      flush: yes
    when: flush

  - name: Allow new incoming SYN packets on TCP port 22 (SSH).
    iptables:
      chain: INPUT
      protocol: tcp
      destination_port: 22
      jump: ACCEPT
      in_interface: "{{ local_interface }}"
      comment: Accept new SSH connections.
    when: ks

  - iptables:
      action: append
      chain: OUTPUT
      out_interface: tun+
      jump: ACCEPT
    when: ks

  - iptables:
      action: append
      chain: INPUT
      in_interface: lo
      jump: ACCEPT
    when: ks
  - iptables:
      action: append
      chain: OUTPUT
      out_interface: lo
      jump: ACCEPT
    when: ks
  - iptables:
      action: append
      chain: OUTPUT
      destination: 255.255.255.255
      jump: ACCEPT
    when: ks
  - iptables:
      action: append
      chain: INPUT
      source: 255.255.255.255
      jump: ACCEPT
    when: ks
  - iptables:
      action: append
      chain: OUTPUT
      out_interface: "{{ local_interface }}"
      protocol: udp
      match: multiport
      destination_port: "{{ item.port }}"
      destination: "{{ item.ip }}"
      jump: ACCEPT
    when: ks
    with_items:
      - "{{ vpn_servers }}"
  - name: iptables allow to local network
    iptables:
      action: insert
      chain: OUTPUT
      out_interface: "{{ local_interface }}"
      destination: "{{ item }}"
      jump: ACCEPT
    with_items: "{{local_networks}}"
    when: ks

  - name: Allow related and established connections
    iptables:
      chain: INPUT
      ctstate: ESTABLISHED,RELATED
      jump: ACCEPT
    become: yes
    when: ks

  - name: Allow related and established connections
    iptables:
      chain: OUTPUT
      ctstate: ESTABLISHED,RELATED
      jump: ACCEPT
    become: yes
    when: ks

  - name: default to drop output
    iptables:
      chain: OUTPUT
      policy: DROP
    when: ks
  - name: default drop INPUT
    iptables:
      chain: INPUT
      policy: DROP
    when: ks

  - name: set mullvad internal dns server
    shell: resolvectl dns {{item}} 10.9.0.1
    with_items:
      - "{{ local_interface }}"
      - tun0

  - name: no local dns
    iptables:
      action: insert
      chain: OUTPUT
      out_interface: "{{ local_interface }}"
      destination: "{{ item }}"
      destination_port: 53
      protocol: udp
      jump: DROP
    with_items: "{{ local_networks }}"

  - name: add routes to reach local local_networks
    shell: ip route add 192.168.2.0/24 dev "{{ local_interface }}" via 10.13.2.1
    register: ret
    failed_when: >
      (ret.stderr != '') and
      ("RTNETLINK answers: File exists" not in ret.stderr)



  - name: disable ipv6
    sysctl:
      name: 'net.ipv6.conf.all.disable_ipv6'
      value: 1

  - name: start openvpn
    systemd:
      state: started
      daemon-reload: yes
      name: openvpn@mullvad

  - name: add mullvad internal nameserver
    lineinfile:
      path: /etc/resolv.conf
      line: "nameserver 10.9.0.1"
      insertbefore: 'nameserver.*'
