---
- hosts: k3s
  tasks:
    - apt:
        pkg:
          - apt
          - open-iscsi
          - nfs-common
          - jq
      become: yes

- hosts: k3s-0.i.stabl.one
  vars_files:
    - ../../secrets.yml
  tasks:
    - debug:
        msg: "{{ ansible_default_ipv4.address }}"
    - name: Install first server
      shell: curl -sfL https://get.k3s.io | sh -
      environment:
        K3S_TOKEN: "{{k3s_token}}"
        INSTALL_K3S_EXEC: "server"
        K3S_CLUSTER_INIT: true
      become: yes
      register: output
    - debug: var=output

- hosts: k3s:!k3s-0.i.stabl.one
  vars_files:
    - ../../secrets.yml
  tasks:
    - name: Print the IP of the first server
      debug: msg= "{{ hostvars[groups['k3s'][0]]['ansible_default_ipv4']['address'] }}"
    - name: Join k3s server to primary server
      shell: curl -sfL https://get.k3s.io | sh -
      environment:
        K3S_TOKEN: "{{k3s_token}}"
        INSTALL_K3S_EXEC: "server"
        K3S_URL: "https://{{ hostvars[groups['k3s'][0]]['ansible_default_ipv4']['address'] }}:6443"
      become: yes
      register: output
    - debug: var=output

- hosts: k3s-0.i.stabl.one
  become: yes
  become_method: sudo
  vars_files:
   - ../../../secrets.yml
  tasks:
  - name: install pip
    package:
      name: python3-pip
      state: present
  - name: install required python modules
    pip:
      name:
        - openshift
        - PyYAML
  - name: Allow K3s pods to resolve internal DNS names
    shell: |
      sudo kubectl get cm -n kube-system coredns -o yaml | sed "s/forward . \/etc\/resolv.conf/forward . {{ipa_server_ip}}/g" | sudo kubectl apply -f - 
      sudo kubectl -n kube-system rollout restart deployment coredns
