# needs jinja2 variables server_name(String),protected(boolean), upstream (Webaddress)

server {
        listen 80;
        server_name {{server_name}};
        return 301 https://$server_name$request_uri;
        }
server {
  listen 443 ssl {{ 'default' if ('auth' in server_name) else '' }};
  server_name {{server_name}};
  ssl_certificate /etc/nginx/sites/{{server_name}}.crt;
  ssl_certificate_key /etc/nginx/sites/{{server_name}}.key;

  #ssl_session_cache  builtin:1000  shared:SSL:10m;
  ssl_protocols  TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;
  add_header Referrer-Policy same-origin;
  {% if protected %}
  include /etc/nginx/sites/authelia.conf; # Virtual endpoint to forward auth requests
  {% endif %}

resolver 127.0.0.11 ipv6=off;
  location / {
        set $example {{upstream}};
        proxy_pass $example;
        {% if protected %}
        include /etc/nginx/sites/auth.conf; # Activates Authelia for specified route/location, please ensure you have setup the domain in your configuration.yml
        {% endif %}
         include /etc/nginx/sites/proxy.conf; # Reverse proxy configuration
    }
}
