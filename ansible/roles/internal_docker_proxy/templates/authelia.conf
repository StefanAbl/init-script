# Virtual endpoint created by nginx to forward auth requests.
location /authelia {
    internal;
    {% if  authelia_local|default("False", true) and authelia_container_name is defined %}
    resolver 127.0.0.11 valid=300s ipv6=off;
    proxy_pass http://{{authelia_container_name}}/api/verify;
    {% else %}
    resolver {{ ipa_server_ip }} valid=300s ipv6=off;
    proxy_ssl_verify on;
    proxy_ssl_server_name on;
    proxy_ssl_name {{internal_authelia_fqdn}};
    proxy_ssl_trusted_certificate "/etc/ssl/certs/ISRG_Root_X1.pem";
    proxy_ssl_verify_depth 10;
    set $upstream_authelia https://{{internal_authelia_fqdn}}/api/verify;
    proxy_pass $upstream_authelia;
    {% endif %}

    proxy_pass_request_body off;
    proxy_set_header Content-Length "";

    # Timeout if the real server is dead
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

    # [REQUIRED] Needed by Authelia to check authorizations of the resource.
    # Provide either X-Original-URL and X-Forwarded-Proto or
    # X-Forwarded-Proto, X-Forwarded-Host and X-Forwarded-Uri or both.
    # Those headers will be used by Authelia to deduce the target url of the user.
    # Basic Proxy Config
    client_body_buffer_size 128k;
    proxy_set_header Host {{internal_authelia_fqdn}};
    proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Forwarded-Uri $request_uri;
    proxy_set_header X-Forwarded-Ssl on;
    proxy_redirect  http://  $scheme://;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_cache_bypass $cookie_session;
    proxy_no_cache $cookie_session;
    proxy_buffers 4 32k;

    # Advanced Proxy Config
    send_timeout 5m;
    proxy_read_timeout 240;
    proxy_send_timeout 240;
    proxy_connect_timeout 240;
}
