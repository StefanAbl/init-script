# yaml-language-server: $schema=https://github.com/ansible/schemas/raw/main/f/ansible-tasks.json
- name: template site
  become_user: "root"
  template:
    src: site.conf
    dest: "{{ internal_docker_proxy.nginx_dir }}/sites/{{server_name}}-site.conf"
  vars:
    - server_name: "{{ server_name}}"
    - protected: "{{protected}}"
    - upstream: "{{ upstream }}"

- set_fact: 
    path: "{{ internal_docker_proxy.nginx_dir }}/sites/{{ server_name}}"
- debug:
    var: ansible_hostname
- debug:
    var: domain
- debug:
    var: host
- debug:
    msg: "Full path to cert: {{ path }}. Will append .crt and .key"

- name: add record to IPA
  ipa_dnsrecord:
    ipa_host: "{{ ipa_server }}"
    ipa_user: "{{ ipa_admin_user }}"
    ipa_pass: "{{ ipa_admin_user_password }}"
    state: present
    zone_name: "{{ internal_domain }}"
    record_name: "{{ record }}"
    record_value: "{{ansible_hostname}}"
    record_type: CNAME

- name: add service to ipa
  ipa_service:
    name: "HTTP/{{ record }}.{{ internal_domain }}"
    ipa_host: "{{ ipa_server }}"
    ipa_user: "{{ ipa_admin_user }}"
    ipa_pass: "{{ ipa_admin_user_password }}"
    hosts:
      - "{{ host }}"
  when: false
  # this module can not add a service if the host does not exist; need to do via comandline
- name: Create service in FreeIPA
  community.general.ipa_service:
    name: "HTTP/{{ record }}.{{ internal_domain }}"
    state: present
    hosts: "{{ ansible_facts.fqdn }}"
    skip_host_check: true
    ipa_host: "{{ ipa_server }}"
    ipa_user: "{{ ipa_admin_user }}"
    ipa_pass: "{{ ipa_admin_user_password }}"

- name: check if cert already present
  become: true
  stat:
    path: "{{path}}.crt"
  register: stat_result

- name: get certificate
  become: yes
  become_user: root
  shell:
    cmd: id; ipa-getcert request -r -f {{path}}.crt -k {{path}}.key -N CN="{{ record }}.{{ internal_domain }}" -K "HTTP/{{ record }}.{{ internal_domain }}"@"{{ internal_domain|upper }}"
  when: stat_result.stat.exists == False
  register: result
- debug: var=result
