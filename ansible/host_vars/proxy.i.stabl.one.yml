update_ip:
  device: eth0 #The device from which to take the IPv6 addr
  dynv6:
    token: "{{proxy.dynv6_token}}"
    records:
      - web.thorn.dynv6.net
      - web.stabl.one
      - vpn2.thorn.dynv6.net
    zones:
      - thorn.dynv6.net
      - stabl.one
  cf:
    token: "{{proxy.cf_token}}"
    zones:
      - name: stabl.one
        records:
          - "stabl.one"
          - "web.stabl.one"
promtail:
    user: proxy #Name of the user from above
    scrape_configs: # scrape configs for loki
    - job_name: system
      pipeline_stages:
      - replace:
          expression: '(?:[0-9]{1,3}\.){3}([0-9]{1,3})'
          replace: '***'
      - replace:
          expression: '(?:remote_addr": ")(?:[A-Za-z0-9]+:{1,2}){0,1}((?:[A-Za-z0-9]+:{1,2})+)[[A-Za-z0-9]*(?:")'
          replace: '**ipv6**:'
      - replace: #Replaces the query part of a URI
          Expression: '(?:(?:\/[A-Za-z0-9-._~]+))(\?.*?)(?:(?:"|\s))'
          replace: ''
      - match:
          selector: '{job="nginx_access_log"}'
          stages:
          - json:
              expressions:
                server_name: "server_name"
          - labels:
              server_name:
      static_configs:
      - targets:
        - localhost
        labels:
          job: nginx_access_log
          host: proxy
          agent: promtail
          __path__: /var/log/nginx/json_access.log
    - job_name: error_log
      static_configs:
      - labels:
          job: nginx_error_log
          host: proxy
          __path__: /var/log/nginx/error.log

acmesh:
  env_vars:
    - name: DYNV6_TOKEN
      value: "{{proxy.dynv6_token}}"
    - name: CF_Token
      value: "{{proxy.cf_token}}"
    - name: CF_Account_ID
      value: "{{CF_Account_ID}}"
    - name: CF_Zone_ID
      value: "{{CF_Zone_ID}}"
streams:
  - name: unifi.thorn.dynv6.net
    value: |
      listen 3478 udp;
      proxy_pass 192.168.2.15:3478;
servers:
  - name: stream.stabl.one #The name of the server
    upstream: https://10.13.2.110:8920
      #How acme.sh should verify the server either http or dns
    verification: dns
      #If verification is dns, which dns APi should acme.sh use
    api: dns_cf
    extras_location: |
      # kill cache
      add_header Last-Modified $date_gmt;
      add_header Cache-Control 'no-store, no-cache';
      if_modified_since off;
      expires off;
      etag off;
      # don't cache it
      proxy_no_cache 1;
      proxy_cache off;
      # even if cached, don't try to use it
      proxy_cache_bypass 1;
    #extras to include in the server block
    extras: |
      # Content Security Policy
      # See: https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
      # Enforces https content and restricts JS/CSS to origin
      # External Javascript (such as cast_sender.js for Chromecast or YouTube embed JS for external trailers) must be whitelisted.
      add_header Content-Security-Policy "default-src https: data: blob:; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline' https://www.gstatic.com/cv/js/sender/v1/cast_sender.js https://www.youtube.com/iframe_api https://s.ytimg.com blob:; worker-src 'self' blob:; connect-src 'self'; object-src 'none'; frame-ancestors 'self' http://localhost:* file:";
      location /socket {
            #Proxy Jellyfin Websockets traffic
            proxy_pass https://10.13.2.110:8920;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Protocol $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
      }
      location /metrics {
        return 404;
      }
  - name: cloud.stabl.one
    upstream: https://10.13.2.101
    verification: dns
    api: dns_cf
    extras: |
      client_max_body_size 100000G;
  - name: cloud.thorn.dynv6.net
    upstream: https://10.13.2.101
    verification: dns
    api: dns_dynv6
    extras: |
      client_max_body_size 100000G;
  - name: docsrv.stabl.one
    upstream: http://10.13.2.106:5000
    verification: dns
    allow_embedding: True
    api: dns_cf
    extras_location: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
  - name: ffsync.thorn.dynv6.net
    upstream: https://syncserver.k3s.i.stabl.one
    verification: dns
    api: dns_dynv6
  - name: unifi.thorn.dynv6.net
    upstream: https://192.168.2.15:8443
    verification: dns
    api: dns_dynv6
    extras_location: |
      #Next 3 lines to fix the WebSocket error in Unifi portal
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    extras: |
      listen 8443 ssl;
      listen [::]:8443 ssl;
  - name: tphc.stabl.one
    upstream: http://tphc.k3s.i.stabl.one
    verification: dns
    api: dns_cf
  - name: blog.stabl.one
    upstream: http://blog.k3s.i.stabl.one
    verification: dns
    api: dns_cf
