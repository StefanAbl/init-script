---
# ConfigMap for Redis configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: security
data:
  redis.conf: |
    bind 0.0.0.0
    protected-mode no
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    loglevel notice
    databases 16
    save ""
    stop-writes-on-bgsave-error no
    rdbcompression no
    rdbchecksum no
    dbfilename dump.rdb
    dir /data
    replica-read-only yes
    repl-diskless-sync no

---
# Headless Service for Redis StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: redis-headless
  namespace: security
spec:
  clusterIP: None
  ports:
    - port: 6379
      targetPort: 6379
      name: redis
    - port: 26379
      targetPort: 26379
      name: sentinel
  selector:
    app: redis

---
# Service for Redis access
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: security
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      name: redis
    - port: 26379
      targetPort: 26379
      name: sentinel
  selector:
    app: redis

---
# StatefulSet for Redis instances with Sentinel sidecars
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: security
spec:
  serviceName: redis-headless
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - redis
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - worker01.i.stabl.one
                      - worker02.i.stabl.one
                      - worker03.i.stabl.one
      initContainers:
        - name: init-redis
          image: redis:8-alpine
          command:
            - sh
            - -c
            - |
              set -ex
              # Copy redis config file
              cp /mnt/redis-config/redis.conf /etc/redis/redis.conf

              # Get the IP of redis-0
              # For redis-0 itself, use its own pod IP. For others, resolve redis-0's hostname
              if [ "$(hostname)" = "redis-0" ]; then
                MASTER_IP=$(hostname -i)
              else
                # Wait for redis-0 DNS to be available
                until MASTER_IP=$(getent hosts redis-0.redis-headless.security.svc.cluster.local | awk '{print $1}' | head -n1); do
                  echo "Waiting for redis-0 DNS..."
                  sleep 2
                done
                echo "replicaof $MASTER_IP 6379" >> /etc/redis/redis.conf
              fi

              echo "Master IP: $MASTER_IP"

              # Create initial sentinel config with IP address
              cat > /etc/redis/sentinel.conf <<EOF
              bind 0.0.0.0
              port 26379
              dir /tmp
              sentinel monitor mymaster $MASTER_IP 6379 2
              sentinel down-after-milliseconds mymaster 5000
              sentinel parallel-syncs mymaster 1
              sentinel failover-timeout mymaster 10000
              EOF
          volumeMounts:
            - name: redis-config
              mountPath: /mnt/redis-config
            - name: config
              mountPath: /etc/redis
      containers:
        - name: redis
          image: redis:8-alpine
          command:
            - redis-server
            - /etc/redis/redis.conf
          ports:
            - containerPort: 6379
              name: redis
          volumeMounts:
            - name: config
              mountPath: /etc/redis
            - name: data
              mountPath: /data
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 15
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
        - name: sentinel
          image: redis:8-alpine
          command:
            - sh
            - -c
            - |
              # Wait for Redis to be ready
              until redis-cli -h localhost ping; do
                echo "Waiting for Redis to be ready..."
                sleep 1
              done

              # Start Sentinel
              redis-sentinel /etc/redis/sentinel.conf
          ports:
            - containerPort: 26379
              name: sentinel
          volumeMounts:
            - name: config
              mountPath: /etc/redis
          livenessProbe:
            tcpSocket:
              port: 26379
            initialDelaySeconds: 15
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - -p
                - "26379"
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
        - name: config
          emptyDir: {}
        - name: data
          emptyDir: {}
