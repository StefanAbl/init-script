apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: external-ingress
  namespace: external-ingress
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://kubernetes.github.io/ingress-nginx
      chart: ingress-nginx
      version: 4.11.1
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
      interval: 5m
  values:
    ingressClass: external
    service:
      annotations:
        metallb.universe.tf/address-pool: external-ingress-address
    controller:
      replicaCount: 3
      allowSnippetAnnotations: true
      config:
        log-format-escaping: json
        log-format: |
          '{'
            '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
            '"connection": "$connection", ' # connection serial number
            '"connection_requests": "$connection_requests", ' # number of requests made in connection
            '"pid": "$pid", ' # process pid
            '"request_id": "$request_id", ' # the unique request id
            '"request_length": "$request_length", ' # request length (including headers and body)
            '"remote_addr": "$remote_addr", ' # client IP
            '"remote_user": "$remote_user", ' # client HTTP username
            '"remote_port": "$remote_port", ' # client port
            '"time_local": "$time_local", '
            '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
            '"request": "$request", ' # full path no arguments if the request
            '"request_uri": "$request_uri", ' # full path and arguments if the request
            '"args": "$args", ' # args
            '"status": "$status", ' # response status code
            '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
            '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
            '"http_referer": "$http_referer", ' # HTTP referer
            '"http_user_agent": "$http_user_agent", ' # user agent
            '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
            '"http_host": "$http_host", ' # the request Host: header
            '"server_name": "$server_name", ' # the name of the vhost serving the request
            '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
            '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
            '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
            '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
            '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
            '"upstream_response_length": "$upstream_response_length", ' # upstream response length
            '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
            '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
            '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
            '"scheme": "$scheme", ' # http or https
            '"request_method": "$request_method", ' # request method
            '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
            '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
            '"gzip_ratio": "$gzip_ratio", '
            '"http_cf_ray": "$http_cf_ray"'
            '}'
      admissionWebhooks:
        enabled: false
    udp:
      "3478": "default/unifi:3478"
    tcp:
      "8080": "default/unifi:8080"
